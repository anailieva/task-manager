name: CI

on: [push]

jobs:
  editorconfig-checker:
    name: editorconfig-checker
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: editorconfig-checker/action-editorconfig-checker@main
    - run: editorconfig-checker

  flake8:
    name: flake8
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.10.13
          architecture: x64
      - name: Install flake8
        run: pip install flake8
      - name: Run flake8
        uses: suo/flake8-github-action@releases/v1
        with:
          checkName: 'flake8'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  markdown-lint:
    name: markdown-lint
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - run: npx markdown-cli *.md

  unittest:
    name: unittest
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.10.13
          architecture: x64
      - name: Execute Unit Tests
        run: python3 -m unittest src/test_task_manager.py

  sonar-cloud:
    needs: [editorconfig-checker, markdown-lint, flake8, unittest]
    name: sonar-cloud
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          organization: anailieva
          project: anailieva_task-manager

  snyk:
    needs: [editorconfig-checker, markdown-lint, flake8, unittest]
    name: snyk
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Snyk test
        working-directory: ./src/
        run: |
          npm install -g snyk
          pip install -r requirements.txt
          snyk test
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
